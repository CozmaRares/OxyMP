error: Expected `,`. Correct format is `#[regex("your regex", path::to::function)]`.
 --> tests/trybuild/tokens/incorrect-attributes.rs:8:26
  |
8 |     #[regex(r"\d+(.\d+)?")]
  |                          ^

error: Expected `,`. Correct format is `#[regex("your regex", path::to::function)]`.
  --> tests/trybuild/tokens/incorrect-attributes.rs:18:27
   |
18 |     #[regex(r"\d+(.\d+)?" match_number)]
   |                           ^^^^^^^^^^^^

error: Unexpected remaining tokens after parsing the attribute. Please consider removing any trailing tokens. Correct format is `#[regex("your regex", path::to::function)]`.
  --> tests/trybuild/tokens/incorrect-attributes.rs:28:40
   |
28 |     #[regex(r"\d+(.\d+)?", match_number, aaa)]
   |                                        ^

error: Expected string literal. Correct format is `#[regex("your regex", path::to::function)]`.
  --> tests/trybuild/tokens/incorrect-attributes.rs:38:13
   |
38 |     #[regex(123, match_number)]
   |             ^^^

error: Expected identifier. Correct format is `#[regex("your regex", path::to::function)]`.
  --> tests/trybuild/tokens/incorrect-attributes.rs:48:28
   |
48 |     #[regex(r"\d+(.\d+)?", "match_number")]
   |                            ^^^^^^^^^^^^^^

error: Expected attribute arguments in parentheses: #[regex(...)]. Correct format is `#[regex("your regex", path::to::function)]`.
  --> tests/trybuild/tokens/incorrect-attributes.rs:55:7
   |
55 |     #[regex]
   |       ^^^^^

error: Unexpected end of input, expected string literal. Correct format is `#[regex("your regex", path::to::function)]`.
  --> tests/trybuild/tokens/incorrect-attributes.rs:62:13
   |
62 |     #[regex()]
   |             ^

error: Expected attribute arguments in parentheses: #[exact(...)]. Correct format is `#[exact("your exact string")]`.
  --> tests/trybuild/tokens/incorrect-attributes.rs:71:7
   |
71 |     #[exact]
   |       ^^^^^

error: Unexpected end of input, expected string literal. Correct format is `#[exact("your exact string")]`.
  --> tests/trybuild/tokens/incorrect-attributes.rs:78:13
   |
78 |     #[exact()]
   |             ^

error: Expected string literal. Correct format is `#[exact("your exact string")]`.
  --> tests/trybuild/tokens/incorrect-attributes.rs:85:13
   |
85 |     #[exact(123)]
   |             ^^^

error: Unexpected remaining tokens after parsing the attribute. Please consider removing any trailing tokens. Correct format is `#[exact("your exact string")]`.
  --> tests/trybuild/tokens/incorrect-attributes.rs:92:17
   |
92 |     #[exact("a" "b")]
   |                 ^^^

error: The use of this attribute is not allowed. Please annotate the variant with `#[exact("your exact string")]` or `#[regex("your regex", path::to::function)]`.
   --> tests/trybuild/tokens/incorrect-attributes.rs:102:7
    |
102 |     #[invalid]
    |       ^^^^^^^

error: Only one attribute is allowed. Consider using only one attribute or creating another variant.
   --> tests/trybuild/tokens/incorrect-attributes.rs:110:7
    |
110 |     #[exact("b")]
    |       ^^^^^

error: Only one attribute is allowed. Consider using only one attribute or creating another variant.
   --> tests/trybuild/tokens/incorrect-attributes.rs:117:7
    |
117 |     #[regex("abc")]
    |       ^^^^^

error: Only one attribute is allowed. Consider using only one attribute or creating another variant.
   --> tests/trybuild/tokens/incorrect-attributes.rs:124:7
    |
124 |     #[regex("def")]
    |       ^^^^^

error: Tokens can only be derived form variants with attributes. Please annotate the variant with `#[exact("your exact string")]` or `#[regex("your regex", path::to::function)]`.
   --> tests/trybuild/tokens/incorrect-attributes.rs:131:5
    |
131 |     A,
    |     ^

error: cannot find attribute `invalid` in this scope
   --> tests/trybuild/tokens/incorrect-attributes.rs:102:7
    |
102 |     #[invalid]
    |       ^^^^^^^
